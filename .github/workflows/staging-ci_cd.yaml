name: Build, Publish and Deploy Contract-Proxy

on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    env:
      EKS_CLUSTER_NAME: colearn-v3
      AWS_REGION: us-west-2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_IMG }}
          export_default_credentials: true

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configuring Docker to use gcloud Auth
        run: |
          gcloud auth configure-docker -q
      # Push image to Google Container Registry
      - name: Build and Push Images
        run: |
          ./img-push.sh
        working-directory: ./k8s

      # Install helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      # Turnstyle avoids concurrent github actions trying to deploy at once
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment_staging
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: staging

      # Setup AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Setup Kubeconfig
      - name: Setup kubeconfig
        id: setup-kubeconfig
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
      # Setting Short-Sha
      - name: get shortsha
        id: vars
        run: |
         echo ::set-output name=sha_short::$(git log -1 --format=%h)
      - name: use env
        run: |
          echo $SHORTSHA
        env:
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      # Deploy the Docker image to the GKE cluster

      - name: Deploy Admin to Staging
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            contract:
              - 'contract/**'
              - 'apps/admin.py'
      - if: steps.filter.outputs.contract == 'true'
        run: |
          helm upgrade --install --wait --timeout 360s staging-admin ./k8s/pre-relayer/ \
            --set admin.name=admin-${{ env.SHORTSHA }} \
            --set admin.tag=${{ env.SHORTSHA }}  \
            --set proxy.enabled=false \
            --set fetchd.enabled=false \
            -n pre
        env:
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      - name: Deploy Proxy to Staging
        run: |
          helm upgrade --install --wait --timeout 360s staging-proxy ./k8s/pre-relayer/ \
            --set admin.enabled=false \
            --set fetchd.tag=${{ env.SHORTSHA }}  \
            --set proxy.tag=${{ env.SHORTSHA }}  \
            --set fetchd.enabled=false \
            -n pre
        env:
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      # Publish Helm output to the PR
      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment_staging.outputs.deployment_id }}