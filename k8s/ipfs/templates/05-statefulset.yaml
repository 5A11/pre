{{- if .Values.ipfs.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.ipfs.name }}-{{ .Values.env }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.ipfs.name }}-svc-{{ .Values.env }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ipfs.name }}-{{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Values.ipfs.name }}-{{ .Values.env }}
    spec:
      containers:
      - name: ipfs
        image: {{ .Values.ipfs.image }}
        ports:
        - containerPort: {{ .Values.ipfs.dns.port }}
          name: http
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/ipfs/
          name: ipfs-pre-storage-{{ .Values.env }}
          subPath: ipfs-data
        livenessProbe:
          tcpSocket:
            port: {{ .Values.ipfs.dns.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ipfs-pre-storage-{{ .Values.env }}
    spec:
      storageClassName: gp2
      volumeMode: Filesystem
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Gi
{{ end }}