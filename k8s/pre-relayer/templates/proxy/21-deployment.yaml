{{- if .Values.proxy.enabled }}
{{ $helmlabels := include "pre-relayer.labels" . | nindent 4 }}
{{ $count := .Values.proxy.replicas | int }}
{{ range until $count }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-{{ . }}
  labels:
    app: pre-relayer
    {{- $helmlabels }}
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pre-relayer
  template:
    metadata:
      labels:
        app: pre-relayer
    spec:
      initContainers:
        - name: contract-test
          image: {{ $.Values.proxy.image }}:{{ $.Values.proxy.tag }}
          resources:
            {{- toYaml $.Values.proxy.resources | nindent 12 }}
          env:
            - name: CONT_ADDR_FILE
              value: "/contract-address/cont_addr.txt"
          volumeMounts:
          - name: contract-address
            mountPath: /contract-address/
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                while ! test -s "$CONT_ADDR_FILE"; do sleep 2; done
      containers:
        - name: proxy
          image: {{ $.Values.proxy.image }}:{{ $.Values.proxy.tag }}
          resources:
            {{- toYaml $.Values.proxy.resources | nindent 12 }}
          ports:
            - containerPort: {{ $.Values.proxy.port  }}
          env:
            - name: LEDGER_CONFIG
              value: "/configs/ledger_config.yaml"
            - name: PROXY_LEDGER
              value: "/keys/proxy_ledger-{{ . }}.key"
            - name: PROXY_ENCRYPTION
              value: "/keys/proxy_encryption{{ . }}.key"
            - name: CONT_ADDR_FILE
              value: "/contract-address/contract.json"
          volumeMounts:
          - name: config-volume
            mountPath: /configs/ledger_config.yaml
            subPath: ledger_config.yaml
          - name: proxy-key-volume
            mountPath: /keys/proxy_ledger-{{ . }}.key
            subPath: proxy_ledger-{{ . }}
          - name: proxy-key-volume
            mountPath: /keys/proxy_encryption{{ . }}.key
            subPath: proxy_encryption-{{ . }}
          - name: contract-address
            mountPath: /contract-address/
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                export CONT_ADDR=$( cat ${CONT_ADDR_FILE} | jq -r .contract_address)  && python3 apps/proxy.py --fund --contract-address ${CONT_ADDR} --ledger-config ${LEDGER_CONFIG} --ledger-private-key ${PROXY_LEDGER} --encryption-private-key ${PROXY_ENCRYPTION} run 
      volumes:
        - name: config-volume
          configMap:
            name: relayer-config
        - name: proxy-key-volume
          secret:
            secretName: pre-proxy
        - name: contract-address
          persistentVolumeClaim:
            claimName: pre-relayer
      restartPolicy: "Always"
---
{{ end }}
{{ end }}